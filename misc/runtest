#!/bin/sh 

Break() {
	echo "====== $@ ======"
}

Tail() {
	lines=$1
	file=$2
	if [ `wc -l $file | awk '{print $1;}'` -gt 22 ]; then
		Break "$file (last 20 lines only)"
		tail -20 "$file"
	else
		Break "$file"
		cat "$file"
	fi
}

Run() {
	if [ `expr "$tst" : ".*\.sh$"` != 0 ]; then
		# Test is executable, so run it
		(set -e; SMACQQ=$BINDIR/smacqq $tst)
	else
		# Test is not executable, so treat it as smacqq input
		$SMACQQ --debug --pregraph -g -f $tst
	fi
}

basetest=`basename $1`
SRCDIR=`cd $SRCDIR; pwd`
OUTDIR=`cd $OUTDIR; pwd`

tst="$SRCDIR/$basetest"
out="$tst.out"
tsto="$OUTDIR/$basetest"
run="$tsto.run"
err="$tsto.err"
gdbout="$tsto.gdb"
diffout="$tsto.diff"

cd "$SRCDIR"

export TZ=MST

# Run test case
SMACQQ="$BINDIR/smacqq" Run < /dev/null > $run 2>$err

# See if the output was as expected or not
diff -u $out $run > $diffout 
stat="$?"
if [ "$stat" != "0" ]; then 
	# This test failed...

	# Display some differences in output
	Tail 20 $diffout
	#Tail 20 $err

	# Compare sorted output
 	sortedout=$OUTDIR/$basetest.out.sort	
        sort $out > $sortedout
        sort $run > $run.sort
	diff -u $sortedout $run.sort > $OUTDIR/$basetest.sort.diff
	if [ "$?" = "0" ]; then
		echo ===== FYI, files are identical except for line order
	fi 

	# Now run under gdb
	if [ "$interactive" = "yes" ]; then
		Break "$tst"
		cat "$tst"
		Break "Running gdb...."
		SMACQQ="gdb -args $BINDIR/smacqq" Run 
	else 
		# Run under batch gdb to get a stack trace at time of failure
		SMACQQ="gdb -quiet -batch -x ${TOP_SRCDIR}/misc/gdbcmds -args $BINDIR/smacqq" Run < /dev/null > $gdbout 2>&1
		Tail 20 $gdbout
	fi
	#echo "======== End of errors from $basetest ========"
	exit $stat
fi
