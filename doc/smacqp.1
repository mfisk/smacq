.\" This -*- nroff -*- file has been generated from
.\" DocBook SGML with docbook-to-man on Debian GNU/Linux.
...\"
...\"	transcript compatibility for postscript use.
...\"
...\"	synopsis:  .P! <file.ps>
...\"
.de P!
\\&.
.fl			\" force out current output buffer
\\!%PB
\\!/showpage{}def
...\" the following is from Ken Flowers -- it prevents dictionary overflows
\\!/tempdict 200 dict def tempdict begin
.fl			\" prolog
.sy cat \\$1\" bring in postscript file
...\" the following line matches the tempdict above
\\!end % tempdict %
\\!PE
\\!.
.sp \\$2u	\" move below the image
..
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
'\" t 
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n  
.TH "smacqp" "1" 
.SH "NAME" 
smacqp \(em pipeline command interface to SMACQ 
.SH "DESCRIPTION" 
.PP 
"Smacqp" is an extensible component system for analyzing streams 
of structured data.  This manpage describes the use of the 
runtime system.  At runtime, multiple modules are loaded and 
formed into a pipeline described by the user.  The first module 
in the pipeline is responsible for producing data from some 
source.  Subsequent modules operate on that data, filter out 
data, or produce data. 
 
.PP 
The runtime program \fBsmacqp\fP has a command-line 
syntax much like a Unix shell.  For example, the following 
command assembles 3 modules (\fBpcapfile\fP, 
\fBuniq\fP, and \fBprint\fP): 
 
\f(CW	smacqp pcapfile - | uniq srcip | print srcip dstip 
\fP        
(Note: when running this command from a shell, you must escape 
the | symbols by putting them in quotes or putting a 
backslash before them). 
 
.PP 
The \fBpcapfile\fP module reads a tcpdump-style 
file from stdin and produces a data record for each packet. 
Each data record is then passed to the \fBuniq\fP       module which, in this case, filters out all duplicate 
occurrences of the same value in the 
\fBsrcip\fR field.  Finally, all data items 
that have not been filtered out are passed to 
\fBprint\fP which prints out the 
\fBsrcip\fR and \fBdstip\fR       fields for each record. 
 
.PP 
The \fBuniq\fP and \fBprint\fP modules 
are polymorphic, meaning that they can operate on any type of 
data.  In contrast, the \fBpcapfile\fP module 
always produces records of type \fBpacket\fP.  Each type 
has a corresponding module that defines how it is accessed. 
 
.PP 
See the \fBsmacq(1)\fP manpage for information on 
the modules available in SMACQ by default. 
 
.SH "SEE ALSO" 
.PP 
\fBsmacq\fP(1), \fBsmacqq\fP(1) 
 
...\" created by instant / docbook-to-man, Tue 18 Mar 2003, 19:56 
