<!doctype refentry PUBLIC "-//OASIS//DTD DocBook V4.1//EN" [
  <!ENTITY docbook "<productname>DocBook</productname>">
  <!ENTITY sgml    "<abbrev>SGML</abbrev>">
]>

<refentry>
  <refentryinfo>
    <address>
      <email>mfisk@lanl.gov</email>
    </address>
    <author>
      <firstname>Mike</firstname>
      <surname>Fisk</surname>
    </author>
    <date>$Date: 2003/01/31 01:39:05 $</date>
  </refentryinfo>
  <refmeta>
    <refentrytitle>smacqp</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>smacqp</refname>
    <refpurpose>pipeline command interface to SMACQ</refpurpose>
  </refnamediv>
  <refsect1>
    <title>DESCRIPTION</title>

    <para>
      "Smacqp" is an extensible component system for analyzing streams
      of structured data.  This manpage describes the use of the
      runtime system.  At runtime, multiple modules are loaded and
      formed into a pipeline described by the user.  The first module
      in the pipeline is responsible for producing data from some
      source.  Subsequent modules operate on that data, filter out
      data, or produce data.
    </para>

    <para>
      The runtime program <command>smacqp</command> has a command-line
      syntax much like a Unix shell.  For example, the following
      command assembles 3 modules (<command>pcapfile</command>,
      <command>uniq</command>, and <command>print</command>):

      <computeroutput>
	smacqp pcapfile - &#124; uniq srcip &#124; print srcip dstip
      </computeroutput>
      
      (Note: when running this command from a shell, you must escape
      the &#124; symbols by putting them in quotes or putting a
      backslash before them).
    </para>
    
    <para>
      The <command>pcapfile</command> module reads a tcpdump-style
      file from stdin and produces a data record for each packet.
      Each data record is then passed to the <command>uniq</command>
      module which, in this case, filters out all duplicate
      occurrences of the same value in the
      <parameter>srcip</parameter> field.  Finally, all data items
      that have not been filtered out are passed to
      <command>print</command> which prints out the
      <parameter>srcip</parameter> and <parameter>dstip</parameter>
      fields for each record.
    </para>
    
    <para>
      The <command>uniq</command> and <command>print</command> modules
      are polymorphic, meaning that they can operate on any type of
      data.  In contrast, the <command>pcapfile</command> module
      always produces records of type <type>packet</type>.  Each type
      has a corresponding module that defines how it is accessed.
    </para>

    <para>
      See the <command>smacq(1)</command> manpage for information on
      the modules available in SMACQ by default.
    </para>

  </refsect1>
  <refsect1>
    <title>SEE ALSO</title>

    <para>
       <command>smacq</command>(1), <command>smacqq</command>(1)
   </para>

  </refsect1>
  
</refentry>
