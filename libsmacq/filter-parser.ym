%start booleanline
%type <comp> booleanline
%debug
%locations
%define api.pure

%{
     #define    yymaxdepth yyfiltermaxdepth
     #define    yyparse yyfilterparse
     #define    yylex   yyfilterlex
     //#define    yyerror yyfiltererror
     #define    yylval  yyfilterlval
     #define    yychar  yyfilterchar
     #define    yydebug yyfilterdebug
     #define    yypact  yyfilterpact
     #define    yyr1    yyfilterr1
     #define    yyr2    yyfilterr2
     #define    yydef   yyfilterdef
     #define    yychk   yyfilterchk
     #define    yypgo   yyfilterpgo
     #define    yyact   yyfilteract
     #define    yyexca  yyfilterexca
     #define yyerrflag yyfiltererrflag
     #define yynerrs    yyfilternerrs
     #define    yyps    yyfilterps
     #define    yypv    yyfilterpv
     #define    yys     yyfilters
     #define    yy_yys  yyfilteryys
     #define    yystate yyfilterstate
     #define    yytmp   yyfiltertmp
     #define    yyv     yyfilterv
     #define    yy_yyv  yyfilteryyv
     #define    yyval   yyfilterval
     #define    yylloc  yyfilterlloc
     #define yyreds     yyfilterreds
     #define yytoks     yyfiltertoks
     #define yylhs      yyfilteryylhs
     #define yylen      yyfilteryylen
     #define yydefred yyfilteryydefred
     #define yydgoto    yyfilteryydgoto
     #define yysindex yyfilteryysindex
     #define yyrindex yyfilteryyrindex
     #define yygindex yyfilteryygindex
     #define yytable     yyfilteryytable
     #define yycheck     yyfilteryycheck
     #define yyname   yyfilteryyname
     #define yyrule   yyfilteryyrule
#include <smacq.h>
#include <SmacqGraph.h>
#include <smacq-parser.h>
#include <dts-filter.h>
#include <filter-parser.hpp>
dts_comparison * Comp;
#define yyfilterlex yysmacql_lex
#include <smacq-parser-internals.h>
%}
m4_include(grammer.ypp)

booleanline: boolean YYSTOP 	{
					Comp = $1;
					return 0;
				}
	;

%%


