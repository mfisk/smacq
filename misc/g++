#!/bin/sh

# This is a wrapper for g++ that tries to statically link any libraries
# that it can, with some specific exceptions.

dirs="/usr/lib"
args=`basename $0`" "

echo "Looking for static versions of libraries" 1>&2

findlib() {
	lib=`basename "$1"`
	dir=`dirname "$1"`
	case $lib in 
	   libc|libpthread|libdl|libltdl|libintl)
			return 0
			;;
	esac

	for d in $dir $dirs; do 
		#ls $d/${lib}.a
		if [ -r $d/${lib}.a ]; then
			# Replace -l argument with explicit .a file
			word="$d/${lib}.a"
			echo "Using $word for $1" 1>&2
			return 0
		fi
	done
}

for word in "$@"; do
	case $word in
		/*.so)
			findlib `echo "$word" | sed 's/\.so//'`
			;;
		/*.dylib)
			findlib `echo "$word" | sed 's/\.dylib//'`
			;;
		-l*)
			findlib `echo "$word" | sed 's/^-l/lib/'`
			;;
		-L*)
			dir=`echo "$word" | sed 's/^-L//'`
			dirs="$dir $dirs"
			;;
	esac

	args="$args$word "
done

# Remove our directory from the path
for f in `echo $PATH | sed 's/:/ /g'`; do 
	expr $f : '.*\/misc$' > /dev/null || newpath="$newpath$f:"
done
#echo $newpath 1>&2
PATH=$newpath
		
echo "$args"
$args
